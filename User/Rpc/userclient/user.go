// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: user.proto

package userclient

import (
	"context"

	"Bolog/User/Rpc/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateUserReq              = user.CreateUserReq
	CreateUserRespon           = user.CreateUserRespon
	DeleteUserReq              = user.DeleteUserReq
	DeleteUserResponse         = user.DeleteUserResponse
	GetUserInfoReq             = user.GetUserInfoReq
	GetUserInfoResponse        = user.GetUserInfoResponse
	GetUserListPageReq         = user.GetUserListPageReq
	GetUserListPageResponse    = user.GetUserListPageResponse
	LoginReq                   = user.LoginReq
	LoginResponse              = user.LoginResponse
	PageListRespData           = user.PageListRespData
	UpdateUserPassWordReq      = user.UpdateUserPassWordReq
	UpdateUserPassWordResponse = user.UpdateUserPassWordResponse
	UpdateUserReq              = user.UpdateUserReq
	UpdateUserRespon           = user.UpdateUserRespon

	User interface {
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserRespon, error)
		DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResponse, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserRespon, error)
		UpdateUserPassWord(ctx context.Context, in *UpdateUserPassWordReq, opts ...grpc.CallOption) (*UpdateUserPassWordResponse, error)
		GetUserInfoById(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
		GetUserListPage(ctx context.Context, in *GetUserListPageReq, opts ...grpc.CallOption) (*GetUserListPageResponse, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserRespon, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

func (m *defaultUser) DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}

func (m *defaultUser) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserRespon, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUser) UpdateUserPassWord(ctx context.Context, in *UpdateUserPassWordReq, opts ...grpc.CallOption) (*UpdateUserPassWordResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpdateUserPassWord(ctx, in, opts...)
}

func (m *defaultUser) GetUserInfoById(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserInfoById(ctx, in, opts...)
}

func (m *defaultUser) GetUserListPage(ctx context.Context, in *GetUserListPageReq, opts ...grpc.CallOption) (*GetUserListPageResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserListPage(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
